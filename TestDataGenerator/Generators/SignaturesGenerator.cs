namespace TestDataGenerator.Generators;
internal class SignaturesGenerator : IRunAll
{
    private readonly ISignatureDatabase _db;
    private readonly IUserDatabase _userDb;

    public SignaturesGenerator(ISignatureDatabase db, IUserDatabase userDb)
    {
        _db = db;
        _userDb = userDb;
    }


    public async Task GenerateSignatures()
    {
        var records = await _db.Get(new SignatureQueryOptions { PageOffset = 0, PageSize = 1 });
        if (records.Length is not 0)
        {
            Console.WriteLine("Signatures already exist.");
            return;
        }

        Console.WriteLine("Generating signatures.");

        string pathJson1 = """
            [[{"X":39,"Y":13},{"X":38,"Y":17},{"X":36,"Y":21},{"X":35,"Y":25},{"X":34,"Y":29},{"X":33,"Y":33},{"X":31,"Y":37},{"X":31,"Y":41},{"X":29,"Y":45},{"X":28,"Y":49},{"X":27,"Y":53},{"X":27,"Y":57},{"X":25,"Y":61},{"X":24,"Y":65},{"X":24,"Y":62}],[{"X":52,"Y":26},{"X":51,"Y":30},{"X":49,"Y":34},{"X":47,"Y":38},{"X":45,"Y":42},{"X":43,"Y":46},{"X":41,"Y":50},{"X":39,"Y":54},{"X":37,"Y":58},{"X":35,"Y":62},{"X":34,"Y":62}],[{"X":28,"Y":44},{"X":32,"Y":44},{"X":36,"Y":44},{"X":39,"Y":46}],[{"X":47,"Y":54},{"X":51,"Y":55},{"X":55,"Y":56},{"X":59,"Y":56},{"X":62,"Y":52},{"X":62,"Y":48},{"X":58,"Y":48},{"X":54,"Y":47},{"X":50,"Y":47},{"X":47,"Y":51},{"X":45,"Y":55},{"X":45,"Y":59},{"X":45,"Y":63},{"X":49,"Y":66},{"X":53,"Y":66},{"X":57,"Y":67},{"X":61,"Y":67},{"X":62,"Y":64}],[{"X":75,"Y":48},{"X":75,"Y":52},{"X":75,"Y":56},{"X":74,"Y":60},{"X":72,"Y":64},{"X":71,"Y":68},{"X":73,"Y":64},{"X":77,"Y":61},{"X":81,"Y":58},{"X":85,"Y":56},{"X":89,"Y":56},{"X":89,"Y":60},{"X":89,"Y":64},{"X":89,"Y":68},{"X":89,"Y":70}],[{"X":104,"Y":55},{"X":105,"Y":59},{"X":105,"Y":63},{"X":105,"Y":67},{"X":105,"Y":71},{"X":109,"Y":68},{"X":112,"Y":64},{"X":116,"Y":63},{"X":120,"Y":62},{"X":124,"Y":62},{"X":124,"Y":63}],[{"X":144,"Y":62},{"X":144,"Y":66},{"X":144,"Y":70},{"X":144,"Y":74},{"X":142,"Y":72}],[{"X":143,"Y":50},{"X":142,"Y":50}]]
            """;

        string pathJson2 =
            """
            [[{"X":49,"Y":20},{"X":47,"Y":24},{"X":46,"Y":28},{"X":45,"Y":32},{"X":43,"Y":36},{"X":42,"Y":40},{"X":41,"Y":44},{"X":39,"Y":48},{"X":38,"Y":52},{"X":37,"Y":56},{"X":37,"Y":60},{"X":36,"Y":64},{"X":32,"Y":62},{"X":32,"Y":60}],[{"X":33,"Y":10},{"X":33,"Y":14},{"X":37,"Y":15},{"X":41,"Y":16},{"X":45,"Y":16},{"X":49,"Y":17},{"X":53,"Y":18},{"X":57,"Y":19},{"X":58,"Y":21}],[{"X":56,"Y":54},{"X":60,"Y":54},{"X":64,"Y":55},{"X":68,"Y":55},{"X":71,"Y":51},{"X":71,"Y":47},{"X":68,"Y":43},{"X":64,"Y":43},{"X":60,"Y":44},{"X":58,"Y":48},{"X":57,"Y":52},{"X":57,"Y":56},{"X":58,"Y":60},{"X":60,"Y":64},{"X":64,"Y":65},{"X":68,"Y":65},{"X":72,"Y":65},{"X":75,"Y":62}],[{"X":105,"Y":46},{"X":101,"Y":45},{"X":97,"Y":46},{"X":93,"Y":48},{"X":90,"Y":52},{"X":94,"Y":54},{"X":97,"Y":58},{"X":101,"Y":59},{"X":105,"Y":62},{"X":104,"Y":66},{"X":100,"Y":68},{"X":96,"Y":68},{"X":92,"Y":69},{"X":88,"Y":69},{"X":84,"Y":68},{"X":83,"Y":68}],[{"X":141,"Y":28},{"X":139,"Y":32},{"X":137,"Y":36},{"X":135,"Y":40},{"X":132,"Y":44},{"X":131,"Y":48},{"X":129,"Y":52},{"X":129,"Y":56},{"X":131,"Y":60},{"X":135,"Y":61},{"X":139,"Y":62},{"X":143,"Y":62},{"X":147,"Y":64},{"X":143,"Y":62},{"X":143,"Y":62}],[{"X":129,"Y":36},{"X":133,"Y":37},{"X":137,"Y":38},{"X":141,"Y":38},{"X":145,"Y":38},{"X":147,"Y":38}],[{"X":264,"Y":22},{"X":268,"Y":22},{"X":272,"Y":24},{"X":276,"Y":26},{"X":280,"Y":28},{"X":284,"Y":30},{"X":288,"Y":31},{"X":292,"Y":34},{"X":296,"Y":37},{"X":297,"Y":41},{"X":299,"Y":45},{"X":300,"Y":49},{"X":301,"Y":53},{"X":301,"Y":57},{"X":301,"Y":61},{"X":301,"Y":65},{"X":299,"Y":69},{"X":295,"Y":72},{"X":291,"Y":73},{"X":287,"Y":74},{"X":283,"Y":74},{"X":279,"Y":74},{"X":275,"Y":74},{"X":271,"Y":74},{"X":271,"Y":74}],[{"X":258,"Y":38},{"X":254,"Y":38},{"X":250,"Y":38},{"X":246,"Y":38},{"X":242,"Y":38},{"X":239,"Y":39}],[{"X":251,"Y":47},{"X":247,"Y":48},{"X":243,"Y":48},{"X":239,"Y":49},{"X":239,"Y":49}]]
            """;

        var users = await _userDb.Get(new UserQueryOptions { PageOffset = 0, PageSize = 20});

        var random = new Random(App.Seed);

        Signature[] signatures = [
            new()
            {
                Id = Guid.Empty,
                UserId = users[random.Next(0, users.Length)].Id,
                PathDataJson = pathJson1,
                Height = 100,
                Width = 400
            },
            new()
            {
                Id = Guid.Empty,
                UserId = users[random.Next(0, users.Length)].Id, 
                PathDataJson = pathJson2,
                Height = 100,
                Width = 400
            }
        ];

        foreach (var signature in signatures)
        {
            await _db.Insert(signature);
        }

        Console.WriteLine($"Created {signatures.Length} signatures.");
    }

    public async Task Generate()
    {
        await GenerateSignatures();
    }
}
